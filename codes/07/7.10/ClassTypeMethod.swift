class Math{	// 类不允许定义类型存储属性，使用类型计算属性代替	class var pi: Double{		return 3.1415926535897932384626	}	class func abs(value : Double) -> Double	{		return value < 0 ? -value : value	}	// 定义类型方法，取消第二个形参的外部形参名	class func pow(base: Double , _ exponent: Int) -> Double	{		var result = 1.0		for idx in 1...exponent		{			result *= base		}		return result	}	// 定义类型方法，类型方法可直接访问类型属性	class func radian2Degree(radian:Double) -> Double	{		return radian * 180 / pi	}	// 定义类型方法，类型方法可通过self引用类型属性	class func degree2Radian(degree:Double) -> Double	{		return degree * self.pi / 180	}}println(Math.pi)println(Math.pow(2 , 4))println(Math.radian2Degree(1.57))println(Math.degree2Radian(45))