struct Apple{	var name: String	var color: String	var weight: Double!	// 取消构造器参数的外部形参名	init(_ name: String , _ color:String)	{		self.name = name		self.color = color	}	// 两个参数的构造器	init(name: String , color:String)	{		self.init(name , color)  // 构造器代理	}	// 为构造器显式指定外部形参名	init(appleName n: String , appleColor c:String)	{//		name = "临时值" // 这行代码将导致错误		self.init(n , c)  // 构造器代理		// 调用构造器代理之后，即可通过self访问该实例的属性		println("--执行显式指定外部形参名的构造器--\(self.name)")			}	// 定义三个参数的构造器	init(name: String , color: String , weight: Double)	{		self.init(name , color)  // 构造器代理		self.weight = weight	}}var ap1 = Apple("红富士" , "粉红色")println("\(ap1.name)--->\(ap1.color)")var ap2 = Apple(appleName:"青苹果" , appleColor:"绿色")println("\(ap2.name)--->\(ap2.color)")var ap3 = Apple(name:"美国苹果" , color:"红色" , weight:0.45)println("\(ap3.name)--->\(ap3.color)--->\(ap3.weight)")