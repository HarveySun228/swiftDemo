struct FkRect{	var x : Int	var y : Int	var width: Int	var height: Int	// 定义下标，指定下标只接受一个Int类型的参数，下标的返回值类型为Int//	subscript(idx: Int) -> Int//	{//		// 定义下标的get部分//		get{//			switch(idx)//			{//				case 0://					return self.x//				case 1://					return self.y//				case 2://					return self.width//				case 3://					return self.height//				default://					println("不支持该索引值")//					return 0//			}//		}//		// 定义下标的set部分//		set{//			switch(idx)//			{//				case 0://					self.x = newValue//				case 1://					self.y = newValue//				case 2://					self.width = newValue//				case 3://					self.height = newValue//				default://					println("不支持该索引值")//			}//		}//	}	// 定义只读下标，只读下标只有get部分。省略get关键字和花括号	subscript(idx: Int) -> Int	{		switch(idx)		{			case 0:				return self.x			case 1:				return self.y			case 2:				return self.width			case 3:				return self.height			default:				println("不支持该索引值")				return 0		}	}}// 创建FkRect实例var rect = FkRect(x:20 , y:12 , width:200, height:300)//// 通过下标对rect的属性赋值//rect[0] = 40//rect[1] = 67// 通过下标访问rect的属性赋值println("rect矩形的左上角的x坐标为：\(rect[0])，y坐标为：\(rect[1])")