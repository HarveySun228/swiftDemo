struct FkRect{	var x : Int	var y : Int	var width: Int	var height: Int	// 由于该方法需要修改该实例的存储属性，因此该方法需要使用mutating修饰	mutating func moveByX(x: Int , y: Int)	{		self.x += x		self.y += y	}}// 创建FkRect实例var rect = FkRect(x:20 , y:12 , width:200, height:300)// 调用mutating方法，该方法可以改变rect实例的存储属性rect.moveByX(100, y: 80)  // ①println("rect矩形的左上角的x坐标为：\(rect.x),y坐标为：\(rect.y)")// 使用let声明FkRect实例，该实例是不可变的。let rt = FkRect(x:30 , y:32 , width:200, height:300)// 不可变的实例不能调用可变方法rt.moveByX(20 , y:40)