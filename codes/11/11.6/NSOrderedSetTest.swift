import Foundation// 定义一个函数，该函数可把NSOrderedSet集合转换为字符串func NSCollectionToString (collection:NSOrderedSet) -> String{	var tmp = "["	// 使用快速枚举遍历NSOrderedSet集合	for var i = 0 , count = collection.count ; i < count ; i++	{		tmp += (String(collection[i] as Int) + ", ")	}	let result = NSMutableString(string:tmp)	// 获取字符串长度	let len = result.length	// 去掉字符串最后的两个字符	result.deleteCharactersInRange(NSMakeRange(len - 2, 2))	result.appendString("]")	return result}// 创建NSOrderedSet集合，故意使用重复的元素// 可看到程序只会保留一个元素let set = NSOrderedSet(objects:	NSNumber(int:40), NSNumber(int:12), NSNumber(int:-9),	NSNumber(int:28), NSNumber(int:12), NSNumber(int:17))println(NSCollectionToString(set))// 下面方法都是根据索引来操作集合元素println("set集合的第一个元素 ：\(set.firstObject)")  // 获取第一个元素println("set集合的第一个元素 ：\(set.lastObject)")  // 获取最后一个元素// 获取指定索引处的元素println("set集合中索引为2的元素 ：\(set[2])")println("28在set集合中的索引为：\(set.indexOfObject(NSNumber(int:28)))")// 对集合进行过滤，获取元素值大于20的集合元素的索引let indexSet = set.indexesOfObjectsPassingTest(){	(obj: AnyObject!, idx:Int, stop:UnsafeMutablePointer<ObjCBool>) -> Bool in	return (obj as Int) > 20}println("set集合中元素值大于20的元素的索引为：\(indexSet)")