import Foundation// 需要被格式化的时间// 获取从1970年1月1日开始，20年之后的日期let dt = NSDate(timeIntervalSince1970:	3600 * 24 * 366 * 20)// 创建两个NSLocale，分别代表中国、美国let locales = [NSLocale(localeIdentifier:"zh_CN"),	NSLocale(localeIdentifier:"en_US")]var df = [NSDateFormatter](count:8, repeatedValue: NSDateFormatter())//为上面2个NSLocale创建8个DateFormat对象for i in 0...1{	df[i * 4] = NSDateFormatter()	// 设置NSDateFormatter的日期、时间风格	df[i * 4].dateStyle = .ShortStyle	df[i * 4].timeStyle = .ShortStyle	// 设置NSDateFormatter的NSLocale	df[i * 4].locale = locales[i]	df[i * 4 + 1] = NSDateFormatter()	// 设置NSDateFormatter的日期、时间风格	df[i * 4 + 1].dateStyle = .MediumStyle	df[i * 4 + 1].dateStyle = .MediumStyle	// 设置NSDateFormatter的NSLocale	df[i * 4 + 1].locale = locales[i]	df[i * 4 + 2] = NSDateFormatter()	// 设置NSDateFormatter的日期、时间风格	df[i * 4 + 2].dateStyle = .LongStyle	df[i * 4 + 2].timeStyle = .LongStyle	// 设置NSDateFormatter的NSLocale	df[i * 4 + 2].locale = locales[i]	df[i * 4 + 3] = NSDateFormatter()	// 设置NSDateFormatter的日期、时间风格	df[i * 4 + 3].dateStyle = .FullStyle	df[i * 4 + 3].timeStyle = .FullStyle	// 设置NSDateFormatter的NSLocale	df[i * 4 + 3].locale = locales[i]}for i in 0...1{	switch i	{		case 0:			println("-------中国日期格式--------")		case 1:			println("-------美国日期格式--------")		default:			break	}	println("SHORT格式的日期格式：\(df[i * 4].stringFromDate(dt))")	println("MEDIUM格式的日期格式：\(df[i * 4 + 1].stringFromDate(dt))")	println("LONG格式的日期格式：\(df[i * 4 + 2].stringFromDate(dt))")	println("FULL格式的日期格式：\(df[i * 4 + 3].stringFromDate(dt))")}let df2 = NSDateFormatter()// 设置自定义的格式器模板df2.dateFormat = "公元yyyy年MM月DD日 HH时mm分"// 执行格式化println(df2.stringFromDate(dt))let dateStr = "2013-03-02"let df3 = NSDateFormatter()// 根据日期字符串的格式设置格式模板df3.dateFormat = "yyyy-MM-dd"// 将字符串转换为NSDate对象let date2 = df3.dateFromString(dateStr)println(date2)