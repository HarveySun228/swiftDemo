import Foundationclass User : Printable{	var name: String	var pass: String	// 定义构造器	init(name: String , pass: String)	{		self.name = name		self.pass = pass	}	func say(content:String)	{		println("\(self.name)说：\(content)")	}	// 重写description属性，可以直接看到User对象的状态	var description: String	{		return "User[name=\(self.name), pass=\(self.pass)]"	}}let array:NSArray = [User(name:"sun", pass:"123"),	User(name:"bai", pass:"345"),	User(name:"zhu", pass:"654"),	User(name:"tang", pass:"178"),	User(name:"niu", pass:"155")]let content = "疯狂iOS讲义"array.enumerateObjectsAtIndexes(NSIndexSet(indexesInRange:NSMakeRange(2,2)),	options: NSEnumerationOptions.Reverse,	// 闭包的第1个参数代表正在遍历的集合元素	// 闭包的第2个参数代表正在遍历的集合元素的索引	// 闭包的第3个参数用于控制是否停止迭代	usingBlock: {(ele: AnyObject!, idx: Int, stop: UnsafeMutablePointer<ObjCBool>) in		println("正在处理第\(idx)个元素：\(ele)")		(ele as? User)?.say(content)	})