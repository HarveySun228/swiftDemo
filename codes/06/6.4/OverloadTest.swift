// 下面定义了4个test()函数，但函数的形参列表、返回值不同// 系统可以区分这它们，这被称为函数重载// 该函数类型为()->Voidfunc test(){	println("无参数的test()函数")}// 该函数类型为(String)->Voidfunc test(msg:String){	println("重载的test()函数\(msg)")}// 该函数类型为(String)->Stringfunc test(msg:String) -> String{	println("重载的test()函数\(msg),带返回值")	return "test"	}// 该函数类型为(String) -> Void，但它有外部形参名，因此系统也可以区分func test(#msg:String){	println("重载的test()函数,外部形参msg：\(msg)")}//// 该函数类型为(String) -> Void，且没有外部形参名，因此不算重载//func test(message:String)//{//	println("重载的test()函数\(message)")//}// 调用test()时没有传入参数，因此系统调用上面没有参数的test()函数test()// 调用test()时传入了一个字符串参数// 此处调用test()时希望该函数返回Void（即没有返回值），因此程序将会调用无返回值的test()函数var rvt:Void = test("hello")  // ①// 此处调用test()时希望该函数返回String，因此程序将会调用有返回值的test()函数var result:String = test("fkit.org")  // ②println(result)test(msg:"crazyit.org")