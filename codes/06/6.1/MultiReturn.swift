import Foundation// 声明函数的返回值为(String, String)元组，代表该函数有两个返回值func divide(num:Double) -> (String, String){	// 将一个浮点数强制类型转换为Int64型，即得到它的整数部分	var zheng = Int64(num)	// 浮点数减去整数部分，得到小数部分，小数部分乘以100后四舍五入取整得到2位小数	var xiao = round((num - Double(zheng)) * 100)	// 返回一个元组作为该函数的2个返回值	return ("\(zheng)" , "\(Int(xiao))")}var result = divide(1284.546)println("整数部分为：\(result.0)")println("小数部分为：\(result.1)")// 声明函数的返回值为(max:Int, min:Int)元组，代表该函数有两个返回值func getMaxAndMin(nums:[Int]) -> (max:Int, min:Int){	var max = nums[0]	var min = nums[0]	// 遍历nums数组，找出其中最大值和最小值	for num in nums {		if num > max {			max = num		}		if num < min {			min = num		}	}	// 返回一个元组作为该函数的2个返回值	return (max, min)}var nums = [20 , 100, -21 , 200 , 30 , 39 , -2 , 213]var maxAndmin = getMaxAndMin(nums)println("最大值为：\(maxAndmin.max), 最小值为：\(maxAndmin.min)")