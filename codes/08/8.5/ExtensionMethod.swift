extension String{	// 添加一个新方法，用于获取当前字符串中指定范围的子串	func substringFromStart(start: Int , toEnd: Int) -> String	{		var count = 0		var tmp = ""		for ch in self		{			// 从start开始获取字符			if count >= start			{				tmp = "\(tmp)\(ch)"			}			// 获取toEnd处结束，程序不再需要后面的字符			if count >= toEnd - 1			{				break			}			count++		}		return tmp	}	// 定义一个类方法，该类方法用于将Bool值转为字符串	static func valueOf(value:Bool) -> String{		return "\(value)"	}}var str = "fkit.orgisagoodcenter"// 截取原字符串中从索引5开始，到索引10之间的子串var subStr = str.substringFromStart(5, toEnd: 10)println(subStr)  //  输出orgisprintln(String.valueOf(true))  // 输出字符串trueprintln(String.valueOf(false))  // 输出字符串false