class User{	var name: String	var age: Int	init(name: String , age: Int)	{		self.name = name		self.age = age	}	// 定义析构器	deinit {		println("\(self.name)用户即将被销毁")	}}var user1: User?var user2: User?var user3: User?// 创建User对象，让user1变量引用该User对象user1 = User(name:"孙悟空" , age:500)  // ①// 让user2变量也引用User对象user2 = user1// 让user3变量也引用User对象user3 = user1  // 此时内存中User对象的引用计数为3  ②// 将user3变量设为nil，不再引用内存中User对象user3 = nil// 将user2变量设为nil，不再引用内存中User对象user2 = nilprintln("------------")// 将user1变量设为nil，不再引用内存中User对象user1 = nil  // 此时内存中User对象的引用计数为0，ARC回收该对象  ③