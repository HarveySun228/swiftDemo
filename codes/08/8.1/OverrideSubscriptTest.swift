class Base{	subscript(idx: Int) -> Int{		get{			println("父类的下标的get方法")			return idx + 10		}	}}class Sub : Base{	// 重写Base类的下标	override subscript(idx: Int) -> Int{		get{			println("重写后的下标的get方法")			println("通过super访问被重写之前的下标:\(super[idx])")  // ①			return idx * idx		}		set{			println("重写后的下标的setter方法,传入的参数值为：\(newValue)")		}	}}var base = Base()println(base[7]) // 输出17// 创建Sub实例var sub = Sub()println(sub[7]) // 输出49sub[7] = 90