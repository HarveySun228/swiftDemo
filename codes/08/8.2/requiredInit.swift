class Fruit{	var name: String	var weight: Double	// 定义required的指定构造器	required init(name:String)  // ①	{		self.name = name		self.weight = 0.0	}	// 定义required的便利构造器	required convenience init(name: String , weight:Double)  // ②	{		self.init(name:name)		self.weight = weight	}}class Apple : Fruit{	var color : String	// 重写父类的required的便利构造器	required init(name:String , weight: Double)  // ③	{		self.color = "粉红"		super.init(name: name)	}	init(color: String)	{		self.color = color		super.init(name: "")	}	// 重写父类的required的指定构造器	// 虽然此处属于构造器重写，但无需添加override	required convenience init(name: String)  // ④	{		self.init(color:"aaa")		super.name = name	}}// 该类将会继承得到父类的required构造器。class Grape: Fruit{	var sugarRate: Double = 0.45}