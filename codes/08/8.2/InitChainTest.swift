class Fruit{	var name: String	var weight: Double	init(name: String)  // ①	{		self.name = name		self.weight = 0.0	}	// 定义便利构造器	convenience init(name: String , weight: Double)  // ②	{		// 调用本类中的①号指定构造器		self.init(name: name)		self.weight = weight	}	// 定义另一个便利构造器	convenience init(n name: String , w weight: Double)  // ③	{		// 调用本类中②号便利构造器		self.init(name: name)	}}class Apple : Fruit{	var color: String	init(name: String , weight: Double , color: String)  // ④	{		self.color = color		// 子类指定构造器必须调用父类的指定构造器，此处调用父类①号构造器		super.init(name:name)		self.weight = weight	}	init()  // ⑤	{		self.color = ""			// 子类指定构造器必须调用父类的指定构造器，此处调用父类①号构造器		super.init(name:"")		self.weight = 0.0	}	// 定义一个便利构造器	convenience init(name: String , color: String)  // ⑥	{		// 调用本类中④号指定构造器，		self.init(name: name , weight:0.0, color: color)	}	// 定义另一个便利构造器	convenience init(n name: String , c color: String)  // ⑦	{		// 调用本类中⑥便利构造器		self.init(name: name , color: color)	}}