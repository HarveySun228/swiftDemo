// 使用合成协议来定义arg形参func test(arg: protocol<HasArea , Mathable>)  // ①{	// 编译器知道arg参数必须是HasArea的实现类型的实例，	// 因此arg参数有fullColor属性	println("arg参数的填充颜色是\(arg.fullColor)")	// 编译器知道arg参数必须是HasArea的实现类型的实例，	// 因此arg参数有strokeWidth属性	println("arg参数的描边的笔触粗细是\(arg.strokeWidth)")	// 编译器知道arg参数必须是HasArea的实现类型的实例，	// 因此arg参数有area属性	println("arg参数的面积是\(arg.area)")	}var circle = Circle(radius:1.2)circle.strokeWidth = 0.5circle.fullColor = Color.Redvar rect = Rect(width: 3.4, height: 2.8)rect.strokeWidth = 0.8rect.fullColor = Color.Green// test()函数的参数必须同时实现HasArea、Mathable协议，// 因此可以传入Circle、Rect的实例test(circle)  // ②test(rect)  // ③