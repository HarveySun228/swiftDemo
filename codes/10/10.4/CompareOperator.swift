// 让Rect实现Equatable, Comparable两个协议struct Rect: Equatable, Comparable{	var left: Double	var top: Double	var width: Double	var height: Double}// 为Rec结构体重载==比较运算符func == (lhs: Rect, rhs: Rect) -> Bool {	return lhs.width * lhs.height == rhs.width * rhs.height}// 为Rec结构体重载<比较运算符func < (lhs: Rect, rhs: Rect) -> Bool {	return lhs.width * lhs.height < rhs.width * rhs.height}// 定义3个Rect结构体实例let rect1 = Rect(left:2.0 , top: 3.0 , width: 5.0 , height: 4.0)var rect2 = Rect(left:5.0 , top: 4.0 , width: 10.0 , height: 2.0)var rect3 = Rect(left:10.0 , top: 7.0 , width: 3.0 , height: 7.0)println(rect1 < rect2)  // 输出falseprintln(rect1 <= rect2)  // 输出trueprintln(rect1 == rect2)  // 输出trueprintln(rect1 != rect2)  // 输出falseprintln(rect1 > rect2)  // 输出falseprintln(rect3 > rect2)  // 输出trueprintln(rect3 >= rect2)  // 输出true