// 定义带泛型声明的+=运算符函数, 将第一个参数声明为In-Out模式func += <T> (inout left:[T] , right:T){	// 调用数组的append()方法添加元素	left.append(right)}var myList = ["Swift" , "iOS" , "Android"]// 直接使用+=为数组添加元素myList += "Objective-C"println(myList)// 定义带泛型声明的+=运算符函数, 将第一个参数声明为In-Out模式// 该函数的第一个形参是字典，第二个形参是一个元组func += <KeyType , ValueType> (inout left:[KeyType:ValueType]		, right:(KeyType , ValueType)){	// 获取元组中的key、value	let (key , value) = right	// 将元组中的key、value添加到原字典中	left.updateValue(value, forKey: key)}var score = ["语文": 90 , "数学": 89]score += ("英语" , 89)println(score)