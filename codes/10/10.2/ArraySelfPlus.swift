// 定义前置的++运算符，该运算符会先添加数组的最后一个元素，// 然后返回返回删除元素的数组prefix func ++ <T> (inout array: [T]) -> [T]{	// 添加数组的最后一个元素	array.append(array[array.count - 1])	return array}var strArr = ["Swift" , "iOS" , "Android" , "C/C++"]// 对数组执行自减（先自减、再使用）println(++strArr)  // ①println(strArr)// 定义后置的++运算符，该运算符会先返回数组// 然后追加数组的最后一个元素postfix func ++ <T> (inout array: [T]) -> [T]{	let tmp = array	// 添加数组的最后一个元素	array.append(array[array.count - 1])	return tmp}// 对数组执行自减（先使用、再自减）println(strArr++)  // ②println(strArr)