func copyContainer <C1:Container, C2:Container	where C1.ItemType == C2.ItemType , C1.ItemType:Printable>	(src:C1 , inout dest: C2){	let count = src.count	// 遍历src数组，并将src数组的元素追加到dest数组后面	for var i = 0 ;  i < count ; i++	{		dest.append(src[i])	}}// 通过扩展让String实现Printable协议extension String: Printable{	public var description: String{		return self	}}// 定义第1个List<String>实例// List实现了Container协议，因此List实例可当成Container使用var strList = List<String>()strList.append("Swift")strList.append("iOS")strList.append("Objective-C")// 定义第2个List<String>实例var figures = List<String>()figures.append("孙悟空")figures.append("猪八戒")figures.append("白骨精")// 调用copyContainer()函数copyContainer(strList , &figures)println(figures)