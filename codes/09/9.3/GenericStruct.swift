// 定义FkRect结构体时使用了泛型声明struct FkRect<T>{	// 使用类型形参声明x、y、width、height成员变量	var x : T	var y : T	var width: T	var height: T	// 定义position计算属性，该属性的返回值也使用了类型形参T	var position: (T, T){		return (self.x, self.y)	}}// 由于传给T形参的是Double，所以构造器参数只能是Doublelet rect = FkRect<Double>(x:1.2 , y:2.3, width:8.4, height:7.8)  // ①let (x, y) = rect.positionprintln("rect的位置位于(\(x), \(y))")// 由于传给T形参的是Int，所以构造器参数只能是Intlet rect2 = FkRect<Int>(x:2 , y:5, width:10, height:8)  // ②let (left, top) = rect2.positionprintln("rect的位置位于(\(left), \(top))")